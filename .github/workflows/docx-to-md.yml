# =============================================================================
# docx-to-md.yml
# -----------------------------------------------------------------------------
# Purpose
#   Convert EVERY tracked *.docx anywhere in the repo into GitHub-flavored
#   Markdown and mirror the original folder structure under /docs-md/.
#   Images embedded in DOCX are extracted alongside each MD file under
#   /docs-md/_media/<relative-docx-path>/.
#
# Why this version?
#   - Works across ALL subdirectories (not just /docs).
#   - Uses pandoc for high-quality DOCX→GFM conversion.
#   - Commits only when changes are produced.
#   - Resilient to paths with spaces; uses -z (NUL-separated) enumerations.
# =============================================================================

name: DOCX → Markdown sync

on:
  workflow_dispatch: {}
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.docx'
      - '.github/workflows/docx-to-md.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/*.docx'
      - '.github/workflows/docx-to-md.yml'

permissions:
  contents: write   # needed to commit docs-md updates
  actions: read

concurrency:
  group: docx-to-md-${{ github.ref }}
  cancel-in-progress: true

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history so we can compare/commit)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Convert *.docx → docs-md/*.md (mirroring folders)
        id: convert
        shell: bash
        run: |
          set -euo pipefail

          # Track whether we produced any output to decide on committing.
          changed=0

          # Cleanly enumerate tracked DOCX files (NUL-separated, handles spaces)
          while IFS= read -r -d '' src; do
            # src is a path like: docs/specs/08_UI_UX.docx
            rel="${src%.docx}"                                 # docs/specs/08_UI_UX
            out="docs-md/${rel}.md"                            # docs-md/docs/specs/08_UI_UX.md
            media_dir="docs-md/_media/${rel}"                  # docs-md/_media/docs/specs/08_UI_UX/

            mkdir -p "$(dirname "$out")" "$media_dir"

            # Convert with GitHub-flavored Markdown, ATX headings, no hard wraps.
            # Extract embedded media into a stable, file-scoped media folder.
            pandoc \
              --from=docx+smart \
              --to=gfm+pipe_tables+raw_html \
              --wrap=none \
              --markdown-headings=atx \
              --extract-media="$media_dir" \
              -o "$out" "$src"

            # Normalize line endings and trim trailing spaces for clean diffs.
            awk 'sub(/[ \t\r]+$/, ""){print; next} {print}' "$out" > "$out.tmp" && mv "$out.tmp" "$out"

            changed=1
          done < <(git ls-files -z '**/*.docx')

          echo "changed=$changed" >> "$GITHUB_OUTPUT"

      - name: Commit updated Markdown (if any)
        if: ${{ steps.convert.outputs.changed == '1' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs(md): sync *.docx → docs-md/ via pandoc"
          file_pattern: docs-md/**
          commit_user_name: "github-actions[bot]"
          commit_user_email: "41898282+github-actions[bot]@users.noreply.github.com"

      - name: No changes detected
        if: ${{ steps.convert.outputs.changed != '1' }}
        run: echo "No DOCX changes detected; skipping commit."
